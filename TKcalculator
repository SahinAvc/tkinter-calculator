from tkinter import *

#screen
s = Tk()
s.title("Calculator")
s.geometry("320x500")
s.configure(bg="#1e1e1e")

# input screen
display = Entry(
    s,
    font=("Segoe UI", 24),
    bg="#2d2929",
    fg="white",
    justify="right",
    bd=0
)
display.place(x=10, y=20, width=300, height=60)

#color theme
btn_bg = "#2d2d2d"
op_bg = "#3a3a3a"
btn_fg = "white"
eq_bg = "#d47df8"

#size-position settings
btn_w = 70
btn_h = 65   
gap = 3      
x0 = 20
y0 = 100

#functions
expression = ""

def read_key(event):
    key = event.char

    if key in '0123456789':
        add_process(key)
    elif key in '+-':
        add_process(key)
    elif key in '*':
        add_process("×")  
    elif key in '/':
        add_process("÷")      
    elif key == '.':
        add_process(".")
    elif key == '%':
        add_process("%")
    elif key == '\r':
        calculate()
    elif key == '\x08':
        backspace()
    elif key.lower() == 'c':
        clear()
    elif key.lower() == 'e':
        screen_clear()
    

def add_process(value):
    global expression
    expression += str(value)
    display.delete(0, END)
    display.insert(END, expression)

def calculate():
    global expression
    try:
        ifade = display.get()
        if ifade.strip() == "":
            return
        ifade = ifade.replace("×", "*").replace("÷", "/").replace(",", ".").replace("%", "/100")
        sonuc = eval(ifade)
        display.delete(0, END)
        display.insert(END, str(sonuc))
        expression = str(sonuc)
    except:
        display.delete(0, END)
        display.insert(END, "Hata")
        expression = ""

def clear():
    global expression
    expression = ""
    display.delete(0, END)

def backspace():
    global expression
    expression = expression[:-1]
    display.delete(0, END)
    display.insert(END, expression)

def screen_clear():
    display.delete(0, END)

# top row (CE, C, %, ←)
Button(s, text="CE", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=screen_clear).place(x=x0, y=y0)
Button(s, text="C", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=clear).place(x=x0 + btn_w + gap, y=y0)
Button(s, text="%", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=lambda: add_process("%")).place(x=x0 + (btn_w + gap) * 2, y=y0)
Button(s, text="←", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=backspace).place(x=x0 + (btn_w + gap) * 3, y=y0)

#numbers and operations
y1 = y0 + btn_h + gap

Button(s, text="7", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("7")).place(x=x0, y=y1)
Button(s, text="8", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("8")).place(x=x0 + btn_w + gap, y=y1)
Button(s, text="9", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("9")).place(x=x0 + (btn_w + gap) * 2, y=y1)
Button(s, text="÷", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=lambda: add_process("÷")).place(x=x0 + (btn_w + gap) * 3, y=y1 - 12)

Button(s, text="4", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("4")).place(x=x0, y=y1 + btn_h + gap)
Button(s, text="5", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("5")).place(x=x0 + btn_w + gap, y=y1 + btn_h + gap)
Button(s, text="6", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("6")).place(x=x0 + (btn_w + gap) * 2, y=y1 + btn_h + gap)
Button(s, text="×", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=lambda: add_process("×")).place(x=x0 + (btn_w + gap) * 3, y=y1 + btn_h + gap - 22)

Button(s, text="1", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("1")).place(x=x0, y=y1 + (btn_h + gap) * 2)
Button(s, text="2", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("2")).place(x=x0 + btn_w + gap, y=y1 + (btn_h + gap) * 2)
Button(s, text="3", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("3")).place(x=x0 + (btn_w + gap) * 2, y=y1 + (btn_h + gap) * 2)
Button(s, text="-", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=lambda: add_process("-")).place(x=x0 + (btn_w + gap) * 3, y=y1 + (btn_h + gap) * 2 - 32)

Button(s, text="0", width=14, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process("0")).place(x=x0, y=y1 + (btn_h + gap) * 3)
Button(s, text=".", width=6, height=3, bg=btn_bg, fg=btn_fg, bd=0, command=lambda: add_process(".")).place(x=x0 + (btn_w + gap) * 2, y=y1 + (btn_h + gap) * 3)
Button(s, text="+", width=6, height=3, bg=op_bg, fg=btn_fg, bd=0, command=lambda: add_process("+")).place(x=x0 + (btn_w + gap) * 3, y=y1 + (btn_h + gap) * 3 - 42)
Button(s, text="=", width=6, height=2, bg=eq_bg, fg="black", bd=0, command=calculate).place(x=x0 + (btn_w + gap) * 3, y=y1 + (btn_h + gap) * 3.2)

s.bind('<Key>', read_key)
s.mainloop()
